name: SonarCloud Integration

on:
  workflow_call:
    secrets:
      githubToken:
        required: true
      sonarToken:
        required: true

env:
  DOTNET_NOLOGO: 1 # Disable the .NET welcome message
  DOTNET_CLI_TELEMETRY_OPTOUT: 1 # Opt out of the .NET SDK telemetry feature
  SONAR_DOTNET_ENABLE_CONCURRENT_EXECUTION: true

jobs:
  scanner:
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET [v7.0.x]
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            7.0.x

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install docker-compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Show docker-compose version
        run: |
          docker-compose version

      - name: Start MongoDB Container
        working-directory: ./IntegrationTest.Infra.MongoDB
        run: docker-compose up -d

      - name: Resolve dependencies
        run: dotnet restore --force --no-cache

      - name: Hack [issue "MSB3026 Unable to copy file" for EmbeddedResources]
        run: |
          mkdir -p IntegrationTest.EntryPoint.WebApi/bin/Debug/net7.0/pt-br 
          mkdir -p IntegrationTest.EntryPoint.WebApi/bin/Debug/net7.0/en-us
          mkdir -p IntegrationTest.EntryPoint.WebApi/bin/Release/net7.0/pt-br 
          mkdir -p IntegrationTest.EntryPoint.WebApi/bin/Release/net7.0/en-us

      - name: Build in Debug Mode
        run: dotnet build --configuration Debug --no-restore

      - name: Set up JDK [17]
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Run Sonar
        env:
          GITHUB_TOKEN: ${{ secrets.githubToken }}
          SONAR_TOKEN: ${{ secrets.sonarToken }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /o:"jtsato" \
          /k:"jtsato_properties-api-netcore" \
          /n:"properties-api-netcore" \
          /d:sonar.projectDescription="Properties API .NET Core" \
          /d:sonar.links.scm="https://github.com/jtsato/properties-api-netcore" \
          /d:sonar.login="${{ env.SONAR_TOKEN }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.qualitygate.wait=false \
          /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
          /d:sonar.dotnet.excludeTestProjects=true
          dotnet build properties-api-netcore.sln --configuration Debug --no-restore
          dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --configuration Debug --no-build --nologo -v n
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"

      - name: Environment Teardown
        if: always()
        run: |
          echo "Environment Teardown"
